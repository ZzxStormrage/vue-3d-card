{"remainingRequest":"/Users/zhengzhangxu/Documents/vue-mimi-alert/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??vue-loader-options!/Users/zhengzhangxu/Documents/vue-mimi-alert/packages/minialert/src/main.vue?vue&type=style&index=0&id=e2ee7cf6&lang=scss&scoped=true&","dependencies":[{"path":"/Users/zhengzhangxu/Documents/vue-mimi-alert/packages/minialert/src/main.vue","mtime":1561110819840},{"path":"/Users/zhengzhangxu/Documents/vue-mimi-alert/node_modules/_css-loader@1.0.1@css-loader/index.js","mtime":499162500000},{"path":"/Users/zhengzhangxu/Documents/vue-mimi-alert/node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/zhengzhangxu/Documents/vue-mimi-alert/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/zhengzhangxu/Documents/vue-mimi-alert/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/zhengzhangxu/Documents/vue-mimi-alert/node_modules/_sass-loader@7.1.0@sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/Users/zhengzhangxu/Documents/vue-mimi-alert/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhengzhangxu/Documents/vue-mimi-alert/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.alert-message {\n  min-width: 100px;\n  box-sizing: border-box;\n  border-radius: 3px;\n  position: fixed;\n  left: 50%;\n  top: 20px;\n  height: 35px;\n  transform: translateX(-50%);\n  background-color: black;\n  opacity: 0.7;\n  color: white;\n  transition: opacity 0.3s, transform 0.4s, top 0.4s;\n  overflow: hidden;\n  padding: 3px 15px;\n  display: flex;\n  align-items: center;\n  .message-fade-enter,\n  .message-fade-leave-active {\n    opacity: 0;\n    transform: translate(-50%, -100%);\n  }\n}\n",{"version":3,"sources":["main.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.vue","sourceRoot":"packages/minialert/src","sourcesContent":["<template>\n  <transition name=\"message-fade\" @after-leave=\"handleAfterLeave\">\n    <div :class=\"[\n        'alert-message',\n        type && !iconClass ? `el-message--${ type }` : '',\n        center ? 'is-center' : '',\n        showClose ? 'is-closable' : '',\n        customClass\n      ]\"\n      :style=\"positionStyle\" v-show=\"visible\" @mouseenter=\"clearTimer\"\n      @mouseleave=\"startTimer\" role=\"alert\">\n      <slot>\n        <p v-html=\"message\" class=\"el-message__content\"></p>\n      </slot>\n      <i v-if=\"showClose\" class=\"el-message__closeBtn el-icon-close\" @click=\"close\"></i>\n    </div>\n  </transition>\n</template>\n\n<script type=\"text/babel\">\nconst typeMap = {\n  success: 'success',\n  info: 'info',\n  warning: 'warning',\n  error: 'error'\n}\n\nexport default {\n  data() {\n    return {\n      visible: false,\n      message: '',\n      duration: 2000,\n      type: 'info',\n      customClass: '',\n      onClose: null,\n      showClose: false,\n      closed: false,\n      verticalOffset: 20,\n      timer: null,\n      center: false\n    }\n  },\n\n  computed: {\n    typeClass() {\n      return this.type && !this.iconClass ? `el-message__icon el-icon-${typeMap[this.type]}` : ''\n    },\n    positionStyle() {\n      return {\n        top: `${this.verticalOffset}px`\n      }\n    }\n  },\n\n  watch: {\n    closed(newVal) {\n      if (newVal) {\n        this.visible = false\n      }\n    }\n  },\n\n  methods: {\n    handleAfterLeave() {\n      this.$destroy(true)\n      this.$el.parentNode.removeChild(this.$el)\n    },\n\n    close() {\n      this.closed = true\n      if (typeof this.onClose === 'function') {\n        this.onClose(this)\n      }\n    },\n\n    clearTimer() {\n      clearTimeout(this.timer)\n    },\n\n    startTimer() {\n      if (this.duration > 0) {\n        this.timer = setTimeout(() => {\n          if (!this.closed) {\n            this.close()\n          }\n        }, this.duration)\n      }\n    },\n    keydown(e) {\n      if (e.keyCode === 27) {\n        // esc关闭消息\n        if (!this.closed) {\n          this.close()\n        }\n      }\n    }\n  },\n  mounted() {\n    this.startTimer()\n    document.addEventListener('keydown', this.keydown)\n  },\n  beforeDestroy() {\n    document.removeEventListener('keydown', this.keydown)\n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n.alert-message {\n  min-width: 100px;\n  box-sizing: border-box;\n  border-radius: 3px;\n  position: fixed;\n  left: 50%;\n  top: 20px;\n  height: 35px;\n  transform: translateX(-50%);\n  background-color: black;\n  opacity: 0.7;\n  color: white;\n  transition: opacity 0.3s, transform 0.4s, top 0.4s;\n  overflow: hidden;\n  padding: 3px 15px;\n  display: flex;\n  align-items: center;\n  .message-fade-enter,\n  .message-fade-leave-active {\n    opacity: 0;\n    transform: translate(-50%, -100%);\n  }\n}\n</style>\n\n"]}]}