{"remainingRequest":"/Users/zhengzhangxu/Documents/vue-mimi-alert/node_modules/babel-loader/lib/index.js!/Users/zhengzhangxu/Documents/vue-mimi-alert/node_modules/eslint-loader/index.js??ref--13-0!/Users/zhengzhangxu/Documents/vue-mimi-alert/packages/minialert/src/index.js","dependencies":[{"path":"/Users/zhengzhangxu/Documents/vue-mimi-alert/packages/minialert/src/index.js","mtime":1561110913820},{"path":"/Users/zhengzhangxu/Documents/vue-mimi-alert/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhengzhangxu/Documents/vue-mimi-alert/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhengzhangxu/Documents/vue-mimi-alert/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport Vue from 'vue';\nimport Main from \"./main.vue\"; // import { PopupManager } from 'element-ui/src/utils/popup';\n// import { isVNode } from 'element-ui/src/utils/vdom';\n\nvar MessageConstructor = Vue.extend(Main);\nvar instance;\nvar instances = [];\nvar seed = 1;\n\nvar Message = function Message(options) {\n  if (Vue.prototype.$isServer) return;\n  options = options || {};\n\n  if (typeof options === 'string') {\n    options = {\n      message: options\n    };\n  }\n\n  var userOnClose = options.onClose;\n  var id = 'message_' + seed++;\n\n  options.onClose = function () {\n    Message.close(id, userOnClose);\n  };\n\n  instance = new MessageConstructor({\n    data: options\n  });\n  instance.id = id; // if (isVNode(instance.message)) {\n  //   instance.$slots.default = [instance.message];\n  //   instance.message = null;\n  // }\n\n  instance.$mount();\n  document.body.appendChild(instance.$el);\n  var verticalOffset = options.offset || 20;\n  instances.forEach(function (item) {\n    verticalOffset += item.$el.offsetHeight + 16;\n  });\n  instance.verticalOffset = verticalOffset;\n  instance.visible = true; // instance.$el.style.zIndex = PopupManager.nextZIndex();\n\n  instances.push(instance);\n  return instance;\n};\n\n['success', 'warning', 'info', 'error'].forEach(function (type) {\n  Message[type] = function (options) {\n    if (typeof options === 'string') {\n      options = {\n        message: options\n      };\n    }\n\n    options.type = type;\n    return Message(options);\n  };\n});\n\nMessage.close = function (id, userOnClose) {\n  var len = instances.length;\n  var index = -1;\n\n  for (var i = 0; i < len; i++) {\n    if (id === instances[i].id) {\n      index = i;\n\n      if (typeof userOnClose === 'function') {\n        userOnClose(instances[i]);\n      }\n\n      instances.splice(i, 1);\n      break;\n    }\n  }\n\n  if (len <= 1 || index === -1 || index > instances.length - 1) return;\n  var removedHeight = instances[index].$el.offsetHeight;\n\n  for (var _i = index; _i < len - 1; _i++) {\n    var dom = instances[_i].$el;\n    dom.style['top'] = parseInt(dom.style['top'], 10) - removedHeight - 16 + 'px';\n  }\n};\n\nMessage.closeAll = function () {\n  for (var i = instances.length - 1; i >= 0; i--) {\n    instances[i].close();\n  }\n};\n\nexport default Message;",{"version":3,"sources":["/Users/zhengzhangxu/Documents/vue-mimi-alert/packages/minialert/src/index.js"],"names":["Vue","Main","MessageConstructor","extend","instance","instances","seed","Message","options","prototype","$isServer","message","userOnClose","onClose","id","close","data","$mount","document","body","appendChild","$el","verticalOffset","offset","forEach","item","offsetHeight","visible","push","type","len","length","index","i","splice","removedHeight","dom","style","parseInt","closeAll"],"mappings":"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","sourcesContent":["import Vue from 'vue';\nimport Main from './main.vue';\n// import { PopupManager } from 'element-ui/src/utils/popup';\n// import { isVNode } from 'element-ui/src/utils/vdom';\nlet MessageConstructor = Vue.extend(Main);\n\nlet instance;\nlet instances = [];\nlet seed = 1;\n\nconst Message = function (options) {\n  if (Vue.prototype.$isServer) return;\n  options = options || {};\n  if (typeof options === 'string') {\n    options = {\n      message: options\n    };\n  }\n  let userOnClose = options.onClose;\n  let id = 'message_' + seed++;\n\n  options.onClose = function () {\n    Message.close(id, userOnClose);\n  };\n  instance = new MessageConstructor({\n    data: options\n  });\n  instance.id = id;\n  // if (isVNode(instance.message)) {\n  //   instance.$slots.default = [instance.message];\n  //   instance.message = null;\n  // }\n  instance.$mount();\n  document.body.appendChild(instance.$el);\n  let verticalOffset = options.offset || 20;\n  instances.forEach(item => {\n    verticalOffset += item.$el.offsetHeight + 16;\n  });\n  instance.verticalOffset = verticalOffset;\n  instance.visible = true;\n  // instance.$el.style.zIndex = PopupManager.nextZIndex();\n  instances.push(instance);\n  return instance;\n};\n\n['success', 'warning', 'info', 'error'].forEach(type => {\n  Message[type] = options => {\n    if (typeof options === 'string') {\n      options = {\n        message: options\n      };\n    }\n    options.type = type;\n    return Message(options);\n  };\n});\n\nMessage.close = function (id, userOnClose) {\n  let len = instances.length;\n  let index = -1;\n  for (let i = 0; i < len; i++) {\n    if (id === instances[i].id) {\n      index = i;\n      if (typeof userOnClose === 'function') {\n        userOnClose(instances[i]);\n      }\n      instances.splice(i, 1);\n      break;\n    }\n  }\n  if (len <= 1 || index === -1 || index > instances.length - 1) return;\n  const removedHeight = instances[index].$el.offsetHeight;\n  for (let i = index; i < len - 1; i++) {\n    let dom = instances[i].$el;\n    dom.style['top'] =\n      parseInt(dom.style['top'], 10) - removedHeight - 16 + 'px';\n  }\n};\n\nMessage.closeAll = function () {\n  for (let i = instances.length - 1; i >= 0; i--) {\n    instances[i].close();\n  }\n};\n\nexport default Message;\n"]}]}